install.packages("reshape2")
install.packages("reshape2")
install.packages("reshape2")
#функция генерации файла с ценами
generate.price <- function(way = 'd:/Куприянова Анна/Кристалл/Анализ/',
file.name = 'Цены',
goods){
file.price <- paste0(way, file.name, '.txt')
data.price <- data.frame('Вид' = c('Поставка' , 'Продажа' , 'Утилизация'))
for(i in 1:length(goods)){
data.price[1,i+1] <- goods[[i]]$price_in
data.price[2,i+1] <- goods[[i]]$price_out
data.price[3,i+1] <- goods[[i]]$price_util
colnames(x = data.price)[i+1] = goods[[i]]$name
}
write.table( x = data.price, file = file.price, col.names = T, row.names = F, fileEncoding = 'UTF-8')
return(data.price)
}
#функция генерации данных для нескольких товаров
SUPPLY <- 1
SALE <- 2
FILE_SUPPLY <- 'in'
FILE_SALE <- 'out'
generate.data <- function(way = '',
file.name='Поставка',
days = 7,
dataType = SUPPLY,
goods = list(name = 'Томаты кг', min = 100, max =120, price_in = 150, price_out = 200, price_util = 70)){
#проверим существует ли папка и если ее нет создадим ее
if (way != ''){
isFoundDir <- dir.exists(way)
if(isFoundDir == F){
dir.create(path = way, showWarnings = F)
if (isFoundDir == F){
print('Папка не сущ, создать нельзя')
return(NULL)
}
}
}
#сформируем файл с ценами, если его еще нет
if(! file.exists('d:/Куприянова Анна/Кристалл/Анализ/Цены')){
generate.price(goods = goods)
}
# если формируем файл продаж, считываем или генерим поставку
if(dataType == SALE){
file.in <- paste0(way, file.name, '.', FILE_SUPPLY)
isFoundFile <- file.exists(file.in)
if(isFoundFile){
data.in <- read.table(file = file.in, header = T, encoding = 'UTF-8')
} else {
data.in <- data.frame('День' = 1:days)
for(i in 1:length(goods)){
data.in[i+1] <- sample(x = goods[[i]]$min:goods[[i]]$max, size = days, replace = T)
colnames(x = data.in)[i+1] = goods[[i]]$name
}
write.table( x = data.in, file = file.in, col.names = T, row.names = F, fileEncoding = 'UTF-8')
}
data.out <- data.frame('Дни'=1:days)
#добавим столбцы под каждый товар
for(i in 1:length(goods)){
data.out[,1+i] <- sample(x=goods[[i]]$min:goods[[i]]$max, size =days, replace = T)
colnames(x = data.out)[1+i]<-goods[[i]]$name
}
#сравним data.out и data.in
for(i in 1:length(goods)){
data.out[,i+1] <- ifelse(data.out[,i+1] > data.in[,i+1], data.in[,i+1], data.out[,i+1])
}
#запишем таблицу в файл с нужным расширением
ext <- switch(dataType, FILE_SUPPLY, FILE_SALE)
write.table(x=data.out, file=paste0(way, file.name, '.', ext), col.names = T, row.names = F)
return(data.out)
}
#создадим таблицу из двух столбцов длиной days
tabl <- data.frame('Дни'=1:days)
#добавим столбцы под каждый товар
for(i in 1:length(goods)){
tabl[,1+i] <- sample(x=goods[[i]]$min:goods[[i]]$max, size =days, replace = T)
colnames(x = tabl)[1+i]<-goods[[i]]$name
}
#запишем таблицу в файл с нужным расширением
ext <- switch(dataType, FILE_SUPPLY, FILE_SALE)
write.table(x=tabl, file=paste0(way, file.name, '.', ext), col.names = T, row.names = F)
return(tabl)
}
NUMBER_SHOPS <- 10
#--------------------------------------------основная программа-------------------------------------------------
system2('d:/Куприянова Анна/Кр1  создание папок.bat')
setwd('d:/')
goods <- list(
list(name = 'Молоко', min = 10 , max = 60, price_in = 40, price_out = 80, price_util = 20),
list(name = 'Хлеб', min = 20 , max = 70, price_in = 20, price_out = 40, price_util = 10),
list(name = 'Авокадо', min = 20 , max = 26, price_in = 100, price_out = 150, price_util = 50),
list(name = 'Помидоры', min = 20 , max = 26, price_in = 100, price_out = 150, price_util = 50),
list(name = 'Орехи', min = 20 , max = 26, price_in = 80, price_out = 150, price_util = 50)
)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 1/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 2/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 3/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 4/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 5/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 6/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 7/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 8/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 9/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
generate.data(way='d:/Куприянова Анна/Кристалл/Магазин 10/',goods = goods, days = 10, file.name = '/Кристалл', dataType = SALE)
system2('d:/Куприянова Анна/Кр1 копирование в анализ.bat')
setwd("D:/Куприянова Анна/Кристалл/Анализ")
in1 = read.table("Магазин 1_ Кристалл.in", encoding = "65001", header = T)
in2 = read.table("Магазин 2_ Кристалл.in", encoding = "65001", header = T)
in3 = read.table("Магазин 3_ Кристалл.in", encoding = "65001", header = T)
in4 = read.table("Магазин 4_ Кристалл.in", encoding = "65001", header = T)
in5 = read.table("Магазин 5_ Кристалл.in", encoding = "65001", header = T)
in6 = read.table("Магазин 6_ Кристалл.in", encoding = "65001", header = T)
in7 = read.table("Магазин 7_ Кристалл.in", encoding = "65001", header = T)
in8 = read.table("Магазин 8_ Кристалл.in", encoding = "65001", header = T)
in9 = read.table("Магазин 9_ Кристалл.in", encoding = "65001", header = T)
in10 = read.table("Магазин 10_ Кристалл.in", encoding = "65001", header = T)
out1 = read.table("Магазин 1_ Кристалл.out", encoding = "65001", header = T)
out2 = read.table("Магазин 2_ Кристалл.out", encoding = "65001", header = T)
out3 = read.table("Магазин 3_ Кристалл.out", encoding = "65001", header = T)
out4 = read.table("Магазин 4_ Кристалл.out", encoding = "65001", header = T)
out5 = read.table("Магазин 5_ Кристалл.out", encoding = "65001", header = T)
out6 = read.table("Магазин 6_ Кристалл.out", encoding = "65001", header = T)
out7 = read.table("Магазин 7_ Кристалл.out", encoding = "65001", header = T)
out8 = read.table("Магазин 8_ Кристалл.out", encoding = "65001", header = T)
out9 = read.table("Магазин 9_ Кристалл.out", encoding = "65001", header = T)
out10 = read.table("Магазин 10_ Кристалл.out", encoding = "65001", header = T)
prices <- read.table('d:/Куприянова Анна/Кристалл/Анализ/Цены.txt', encoding = "UTF-8", header = T)
#-------------------------------------создание таблицы с нулями----------------------------------------
mag = c('Магазин 1','Магазин 2','Магазин 3','Магазин 4','Магазин 5','Магазин 6','Магазин 7','Магазин 8','Магазин 9','Магазин 10','Итого','Среднее')
res.table <- data.frame('Название' = mag)
#Запишем все out и in в вектор:
vec.out <- list(out1,out2,out3,out4,out5,out6,out7,out8,out9,out10)
vec.in <- list(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10)
NUMBER_SHOPS <- length(vec.out)
#отдельно и один раз проводим считывание цен из файла с ценами в векторы:
data.price <- read.table('d:/Куприянова Анна/Кристалл/Анализ/Цены.txt', encoding = "UTF-8", header = T)
postavka <- c()
prodaga <- c()
utilisazia <- c()
for( i in 1:length(goods)){
postavka <- append(postavka, data.price[1,i+1])
prodaga <- append(prodaga, data.price[2,i+1])
utilisazia <- append(utilisazia, data.price[3,i+1])
}
for(i in 1:length(goods)){
#заполняем все нулями (в первую очередь нужно для 11 и 12 строк потом)
res.table[,1+1+11*(i-1)] <- 0
res.table[,1+2+11*(i-1)] <- 0
res.table[,1+3+11*(i-1)] <- 0
res.table[,1+4+11*(i-1)] <- 0
res.table[,1+5+11*(i-1)] <- 0
res.table[,1+6+11*(i-1)] <- 0
res.table[,1+7+11*(i-1)] <- 0
res.table[,1+8+11*(i-1)] <- 0
res.table[,1+9+11*(i-1)] <- 0
res.table[,1+10+11*(i-1)] <- 0
res.table[,1+11+11*(i-1)] <- 0
for(j in 1:NUMBER_SHOPS){
#Выручка
res.table[j,1+1+11*(i-1)] <- sum(vec.out[[j]][[i+1]]) * prodaga[i]
names(res.table)[1+1+11*(i-1)]<- paste0('Выручка: ', goods[[i]]$name)
#Реализация
res.table[j,1+3+11*(i-1)] <- sum(vec.out[[j]][[i+1]])
names(res.table)[1+3+11*(i-1)]<- paste0('Реализация: ', goods[[i]]$name)
#Списание
res.table[j,1+4+11*(i-1)] <- sum(vec.in[[j]][[i+1]]) - sum(vec.out[[j]][[i+1]])
names(res.table)[1+4+11*(i-1)]<- paste0('Списание: ', goods[[i]]$name)
#Прибыль
res.table[j,1+2+11*(i-1)] <- res.table[j,1+1+11*(i-1)] - sum(vec.in[[j]][[i+1]])*postavka[i] - (res.table[j,1+4+11*(i-1)])*utilisazia[i]
names(res.table)[1+2+11*(i-1)]<- paste0('Прибыль: ', goods[[i]]$name)
#sd
res.table[j,1+5+11*(i-1)] <- round(sd(vec.out[[j]][[i+1]]),3)
names(res.table)[1+5+11*(i-1)]<- paste0('SD: ', goods[[i]]$name)
#------------------------------------------------------------------------------
#Продажи макс
res.table[j,1+6+11*(i-1)] <- max(vec.out[[j]][[i+1]])
names(res.table)[1+6+11*(i-1)]<- paste0('Продажи макс: ', goods[[i]]$name)
#День
res.table[j,1+7+11*(i-1)] <- which.max(vec.out[[j]][[i+1]])
names(res.table)[1+7+11*(i-1)]<- paste0('День: ', goods[[i]]$name)
#Продажи мин
res.table[j,1+8+11*(i-1)] <- min(vec.out[[j]][[i+1]])
names(res.table)[1+8+11*(i-1)]<- paste0('Продажи мин: ', goods[[i]]$name)
#День
res.table[j,1+9+11*(i-1)] <- which.min(vec.out[[j]][[i+1]])
names(res.table)[1+9+11*(i-1)]<- paste0(' День: ', goods[[i]]$name)
#Списание макс
res.table[j,1+10+11*(i-1)] <- max(vec.in[[j]][[i+1]]-vec.out[[j]][[i+1]])
names(res.table)[1+10+11*(i-1)]<- paste0('Списание макс: ', goods[[i]]$name)
#День
res.table[j,1+11+11*(i-1)] <- which.max(vec.in[[j]][[i+1]]-vec.out[[j]][[i+1]])
names(res.table)[1+11+11*(i-1)]<- paste0('  День: ', goods[[i]]$name)
}
}
#-----------------------------------------для всех продуктов----------------------------------------
#обнуление
res.table[,1+length(res.table)] <- 0
names(res.table)[length(res.table)]<- paste0('Выручка: всего')
res.table[,1+length(res.table)] <- 0
names(res.table)[length(res.table)]<- paste0('Прибыль: всего')
res.table[,1+length(res.table)] <- 0
names(res.table)[length(res.table)]<- paste0('Реализация: всего')
res.table[,1+length(res.table)] <- 0
names(res.table)[length(res.table)]<- paste0('Списание: всего')
res.table[,1+length(res.table)] <- 0
names(res.table)[length(res.table)]<- paste0('SD: всего')
for_sd_1 <- as.numeric(vector())
for_sd_2 <- as.numeric(vector())
for_sd_3 <- as.numeric(vector())
for_sd_4 <- as.numeric(vector())
for_sd_5 <- as.numeric(vector())
for_sd_6 <- as.numeric(vector())
for_sd_7 <- as.numeric(vector())
for_sd_8 <- as.numeric(vector())
for_sd_9 <- as.numeric(vector())
for_sd_10 <- as.numeric(vector())
for_sd <- list(for_sd_1, for_sd_2, for_sd_3, for_sd_4, for_sd_5, for_sd_6, for_sd_7, for_sd_8, for_sd_9, for_sd_10)
for(i in 1:length(goods)){
for(j in 1:NUMBER_SHOPS){
#Выручка
res.table[j,length(res.table)-4] <- res.table[j,length(res.table)-4] + res.table[j,1+1+11*(i-1)]
#Реализация
res.table[j,length(res.table)-2] <- res.table[j,length(res.table)-2] + res.table[j,1+3+11*(i-1)]
#Списание
res.table[j,length(res.table)-1] <-res.table[j,length(res.table)-1] + res.table[j,1+4+11*(i-1)]
#Прибыль
res.table[j,length(res.table)-3] <- res.table[j,length(res.table)-3] + res.table[j,1+2+11*(i-1)]
#sd
for_sd[[j]] <- c(for_sd[[j]], vec.out[[j]][[i+1]])
}
}
#закончим с sd
for(j in 1:10){
res.table[j,length(res.table)] <- round(sd(for_sd[[j]]),3)
}
#------------------------------------------итого и среднее-----------------------------------------
for(i in 1:(length(goods)+1)){
for(j in 1:5){
res.table[11,j+1+11*(i-1)] <- sum(res.table[,j+1+11*(i-1)])
res.table[12,j+1+11*(i-1)] <- res.table[11,j+1+11*(i-1)]/10
}
}
for(i in 1:(length(goods))){
res.table[11,6+1+11*(i-1)] <- max(res.table[,6+1+11*(i-1)])
max_1_i <- which.max(res.table[,6+1+11*(i-1)][1:10])
res.table[11,7+1+11*(i-1)] <- res.table[max_1_i,7+1+11*(i-1)]
res.table[11,8+1+11*(i-1)] <- min(res.table[,8+1+11*(i-1)][1:10])
min_1_i <- which.min(res.table[,8+1+11*(i-1)][1:10])
res.table[11,9+1+11*(i-1)] <- res.table[min_1_i,9+1+11*(i-1)]
res.table[11,10+1+11*(i-1)] <- max(res.table[,10+1+11*(i-1)])
max_2_i <- which.max(res.table[,10+1+11*(i-1)][1:10])
res.table[11,11+1+11*(i-1)] <- res.table[max_2_i,11+1+11*(i-1)]
}
#-------------------------------------маленькая для мин и макс дней---------------------------------
#for_lil <- c('кол-во товара','номер магазина','день')
#lil.res.table <- data.frame('Суть' = for_lil)
#for(i in 1:length(goods)){
#
#  for(j in 1:10){
#    lil.res.table[1,1+1+3*(i-1)] <- max(res.table[,6+1+11*(i-1)])
#    print(max(res.table[,6+1+11*(i-1)]))
#    lil.res.table[2,1+2+3*(i-1)] <- which(grepl(max(res.table[,6+1+11*(i-1)]),res.table[,6+1+11*(i-1)]))
#    lil.res.table[3,1+3+3*(i-1)] <- which(res.table[,6+1+11*(i-1)] == lil.res.table[1,1+3+3*(i-1)])
#  }
#  names(res.table)[1+1+3*(i-1)]<- paste0('Макс продажа: ', goods[[i]]$name)
#  names(res.table)[1+2+3*(i-1)]<- paste0('Мин продажа: ', goods[[i]]$name)
#  names(res.table)[1+3+3*(i-1)]<- paste0('Макс списание: ', goods[[i]]$name)
#}
#----------------------------------------Запись в таблицу-------------------------------------------
write.table(x=res.table, file='D:/Куприянова Анна/Результаты.csv',
col.names = T,
row.names = F,
sep = ';',
dec = ',')
#-------------------------------------------Графический анализ------------------------------------------------
#--------------------------5.1 Динамика продаж одного товара в одном магазине----------------------------------------------
draw.onepr.onemg <- function(mag = out1, product = 'Хлеб'){
#выясним номер данного продукта
prodact_ind <- 0
for(i in 1:length(mag)){
prodact_ind <- prodact_ind + 1
if(names(mag)[i]== product){
break
}
}
plot(x = 1:length(mag[[prodact_ind]]), y = mag[[prodact_ind]],type = 'l', main = paste0("Динамика продаж в выбранном магазине: \n ", product), xlab= "День", ylab = "Кол-во товара")
abline(v = seq(1, length(mag[[prodact_ind]]),1), col = 'green')
}
draw.onepr.onemg()
draw.onepr.onemg(out7, product = 'Авокадо')
#----------------------------5.2 Динамика продаж всех товаров одного магазина---------------------------
draw.allpr.onemag<-function(mag = out1){
#чуть исправим out1 - теперь там не кол-во а, выручка
buf_out <- mag
for(i in 1:length(goods)){
for(j in 1:length(mag[[1]])){
buf_out[j,i+1] <- buf_out[j,i+1]*prodaga[i]
}
}
#ищем максимальный для у
max_y <- 0
for(i in 2:(length(buf_out))){
if(max(buf_out[[i]]) > max_y){
max_y <-max(buf_out[[i]])
vec_with_max_y <- i
}
}
plot(x = 1:length(buf_out[[1]]), y = c(1:(length(buf_out[[1]])-1),max_y), type = "n", main = "Динамика продаж всех товаров \n выбранного магазина", xlab= "День", ylab = "Выручка, руб")
colors = paste0('#', sample(100000:999999, length(buf_out)))
for (i in 2:length(buf_out)){
points(x = 1:length(buf_out[[i]]),
y = buf_out[[i]],
col = colors[i]
)
lines(x = 1:length(buf_out[[i]]),
y = buf_out[[i]],
col = colors[i]
)
}
# Определим положение, названия и цвета:
main = "Товары"
location = "topright"
labels = colnames(buf_out)[2:length(colnames(buf_out))]
# Рисуем легенду
legend(-1,1, labels, title = main,bty = "n", xpd=TRUE, fill = colors)
}
draw.allpr.onemag()
draw.onepr.allmag.profit <- function(product = 'Хлеб'){
#выясним номер данного продукта во всех продажах
prodact_ind <- 0
for(i in 1:length(goods)){
prodact_ind <- prodact_ind + 1
if(goods[[i]]$name == product){
break
}
}
#составляем вектор со значениями по продажам данного продукта из всех магазинов
buf_out <- c()
for(i in 1:length(vec.out)){
buf_out <- c(buf_out, sum(vec.out[[i]][[prodact_ind+1]]))
}
#составляем вектор со значениями по поставкам данного продукта из всех магазинов
buf_in <- c()
for(i in 1:length(vec.in)){
buf_in <- c(buf_in, sum(vec.in[[i]][[prodact_ind+1]]))
}
#составляем вектор со значениями по утилизации данного продукта из всех магазинов
buf_ut <- c()
for(i in 1:length(vec.in)){
buf_ut <- c(buf_ut, sum(vec.in[[i]][[prodact_ind+1]])-sum(vec.out[[i]][[prodact_ind+1]]))
}
#составляем итоговый вектор
for_rez <- c()
for(i in 1:length(buf_in)){
for_rez <- c(for_rez, buf_out[i]*prodaga[prodact_ind]-buf_in[i]*postavka[prodact_ind]-buf_ut[i]*utilisazia[prodact_ind])
}
barplot(height = for_rez, names.arg = c(1:10), col = 'red', main = paste0('Прибыль по всем магазинам: \n ',product), xlab= "Номер магазина", ylab = "Прибыль, руб")
}
draw.onepr.allmag.profit()
